--- a/qtbase/src/corelib/global/qendian.h	2022-01-02 00:49:13.784545917 +0000
+++ b/qtbase/src/corelib/global/qendian.h	2022-01-02 00:48:59.668504423 +0000
@@ -47,6 +47,7 @@
 // include stdlib.h and hope that it defines __GLIBC__ for glibc-based systems
 #include <stdlib.h>
 #include <string.h>
+#include <limits>
 
 #ifdef min // MSVC
 #undef min

--- a/qtbase/src/corelib/global/qglobal.h	2022-01-02 01:58:58.756922732 +0000
+++ b/qtbase/src/corelib/global/qglobal.h	2022-01-02 01:58:50.048896654 +0000
@@ -45,6 +45,7 @@
 #  include <type_traits>
 #  include <cstddef>
 #  include <utility>
+#  include <limits>
 #endif
 #ifndef __ASSEMBLER__
 #  include <assert.h>
--- a/qtlocation/src/3rdparty/mapbox-gl-native/platform/default/bidi.cpp	2020-06-03 10:51:20.000000000 +0000
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/platform/default/bidi.cpp	2022-01-03 23:11:37.117666493 +0000
@@ -5,6 +5,7 @@
 #include <unicode/ushape.h>
 
 #include <memory>
+#include <stdexcept>
 
 namespace mbgl {
 
--- a/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/util/convert.cpp	2020-06-03 10:51:20.000000000 +0000
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/util/convert.cpp	2022-01-04 00:02:38.914544288 +0000
@@ -1,3 +1,4 @@
+#include <cstdint>
 #include <mbgl/util/convert.hpp>
 
 namespace mbgl {
--- a/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/renderer/sources/render_vector_source.cpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/renderer/sources/render_vector_source.cpp
@@ -2,6 +2,7 @@
 #include <mbgl/renderer/render_tile.hpp>
 #include <mbgl/renderer/paint_parameters.hpp>
 #include <mbgl/tile/vector_tile.hpp>
+#include <mbgl/tile/tile_loader_impl.hpp>
 
 #include <mbgl/algorithm/generate_clip_ids.hpp>
 #include <mbgl/algorithm/generate_clip_ids_impl.hpp>
--- a/qtwebengine/src/3rdparty/chromium/third_party/webrtc/call/rtx_receive_stream.h	2020-06-03 10:51:20.000000000 +0000
+++ b/qtwebengine/src/3rdparty/chromium/third_party/webrtc/call/rtx_receive_stream.h	2022-01-04 01:33:57.911941126 +0000
@@ -12,6 +12,7 @@
 #define CALL_RTX_RECEIVE_STREAM_H_
 
 #include <map>
+#include <cstdint>
 
 #include "call/rtp_packet_sink_interface.h"
 
--- a/qtwebengine/src/3rdparty/chromium/media/cdm/supported_cdm_versions.h	2020-06-03 10:51:20.000000000 +0000
+++ b/qtwebengine/src/3rdparty/chromium/media/cdm/supported_cdm_versions.h	2022-01-04 02:56:31.718068525 +0000
@@ -6,6 +6,7 @@
 #define MEDIA_CDM_SUPPORTED_CDM_VERSIONS_H_
 
 #include <array>
+#include <cstddef>
 
 #include "media/base/media_export.h"
 #include "media/cdm/api/content_decryption_module.h"
@@ -53,7 +54,7 @@
 // Returns whether the CDM interface of |version| is supported in the
 // implementation.
 constexpr bool IsSupportedCdmInterfaceVersion(int version) {
-  for (size_t i = 0; i < kSupportedCdmInterfaceVersions.size(); ++i) {
+  for (std::size_t i = 0; i < kSupportedCdmInterfaceVersions.size(); ++i) {
     if (kSupportedCdmInterfaceVersions[i].version == version)
       return true;
   }
@@ -71,7 +72,7 @@
 
 // Returns whether the CDM interface of |version| is enabled by default.
 constexpr bool IsCdmInterfaceVersionEnabledByDefault(int version) {
-  for (size_t i = 0; i < kSupportedCdmInterfaceVersions.size(); ++i) {
+  for (std::size_t i = 0; i < kSupportedCdmInterfaceVersions.size(); ++i) {
     if (kSupportedCdmInterfaceVersions[i].version == version)
       return kSupportedCdmInterfaceVersions[i].enabled;
   }

